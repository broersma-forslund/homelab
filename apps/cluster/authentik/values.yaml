global:
  revisionHistoryLimit: 0

  volumes:
  - name: postgres-credentials
    secret:
      secretName: authentik-data-app
  volumeMounts:
    - name: postgres-credentials
      mountPath: /postgres-credentials
      readOnly: true
  env:
    - name: AUTHENTIK_SECRET_KEY
      valueFrom:
        secretKeyRef:
          name: authentik-secret
          key: secretKey
    - name: AUTHENTIK_POSTGRESQL__USE_PGBOUNCER
      value: "false"

authentik:
  authentik:
    postgresql:
      # host: env://AUTHENTIK_DATA_POOLER_RW_SERVICE_HOST
      host: env://AUTHENTIK_DATA_RW_SERVICE_HOST
      name: file:///postgres-credentials/dbname
      user: file:///postgres-credentials/username
      password: file:///postgres-credentials/password

  server:
    replicas: 0
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true

    ingress:
      enabled: true
      hosts:
        - authentik.mobrockers.com
      tls:
        - hosts:
          - authentik.mobrockers.com

  worker:
    replicas: 0
  redis:
    enabled: true
    master:
      revisionHistoryLimit: 0

  prometheus:
    rules: 
      enabled: true
