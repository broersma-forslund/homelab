apiVersion: apps/v1
kind: Deployment
metadata:
  name: zigbee2mqtt
  labels:
    app.kubernetes.io/name: zigbee2mqtt
    app.kubernetes.io/instance: zigbee2mqtt
spec:
  revisionHistoryLimit: 0
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app.kubernetes.io/name: zigbee2mqtt
        app.kubernetes.io/instance: zigbee2mqtt
  template:
    metadata:
      labels:
        app.kubernetes.io/name: zigbee2mqtt
        app.kubernetes.io/instance: zigbee2mqtt
    spec:
      initContainers:
        - name: copy-config
          image: '{{ .Values.config.image.repository }}:{{ .Values.config.image.tag }}'
          command:
            - 'sh'
            - '-c'
            - |
              if [ -f /config/configuration.yaml ]; then
                echo 'Old config:'
                cat /config/configuration.yaml
                echo 'Copy current config to /config/configuration.yaml.old'
                cp /config/configuration.yaml /config/configuration.yaml.old
              fi
              cp /tmp/configuration.yaml /config/configuration.yaml
              echo '==================================='
              echo 'New config:'
              cat /config/configuration.yaml

              if [ -f /config/secret.yaml ]; then
                echo 'Copy current secrets to /config/secret.yaml.old'
                cp /config/secret.yaml /config/secret.yaml.old
              fi
              cp /tmp/secret.yaml /config/secret.yaml
          volumeMounts:
            - name: default-config
              mountPath: /tmp/configuration.yaml
              subPath: configuration.yaml
            - name: secret-config
              mountPath: /tmp/secret.yaml
              subPath: secret.yaml
            - name: data
              mountPath: /config
      containers:
        - name: zigbee2mqtt
          image: '{{ .Values.zigbee2mqtt.image.repository }}:{{ .Values.zigbee2mqtt.image.tag }}'
          env:
            - name: TZ
              value: 'Europe/Amsterdam'
          ports:
            - containerPort: 8080
              protocol: TCP
              name: http
          volumeMounts:
            - mountPath: /app/data
              name: data
            - name: svc-cluster-local-bundle
              mountPath: /svc-cluster-local-bundle
      volumes:
        - name: svc-cluster-local-bundle
          configMap:
            name: svc-cluster-local-bundle
        - name: data
          persistentVolumeClaim:
            claimName: zigbee2mqtt-data
        - name: default-config
          configMap:
              name: zigbee2mqtt-config
        - name: secret-config
          secret:
            secretName: zigbee2mqtt-credentials
