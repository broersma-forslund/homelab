adguard:
  secretInit:
    primary: 
      create: true
      annotations:
        replicator.v1.mittwald.de/replication-allowed: "true"
        replicator.v1.mittwald.de/replication-allowed-namespaces: "private-external-dns"

  primary:
    persistence:
     existingVolume: pvc-ba4ddfd8-4881-433b-9a04-9e24a8018776

    ingress:
      class: nginx
      domain: adguard.mobrockers.com
      annotations:
        nginx.ingress.kubernetes.io/auth-url: |-
          http://ak-outpost-authentik-embedded-outpost.authentik.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
        nginx.ingress.kubernetes.io/auth-signin: |-
          https://adguard.mobrockers.com/outpost.goauthentik.io/start?rd=$escaped_request_uri
        nginx.ingress.kubernetes.io/auth-response-headers: |-
          Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
        nginx.ingress.kubernetes.io/auth-snippet: |-
          proxy_set_header X-Forwarded-Host $http_host;

  secondary:
    replicas: 3

    persistence:
      storageClass: ceph-block

    service:
      annotations:
        'io.cilium/lb-ipam-ips': 10.0.103.10,10.0.103.11

    topologySpreadConstraints:
    - maxSkew: 1
      topologyKey: kubernetes.io/hostname
      whenUnsatisfiable: ScheduleAnyway
      labelSelector:
        matchLabels:
          app.kubernetes.io/instance: adguard
          app.kubernetes.io/name: adguard
    - maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: ScheduleAnyway
      labelSelector:
        matchLabels:
          app.kubernetes.io/instance: adguard
          app.kubernetes.io/name: adguard
